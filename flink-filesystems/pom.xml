<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.apache.flink</groupId>
		<artifactId>flink-parent</artifactId>
		<version>2.0-SNAPSHOT</version>
	</parent>

	<artifactId>flink-filesystems</artifactId>
	<name>Flink : FileSystems : </name>
	<packaging>pom</packaging>

	<properties>
		<fs.hadoopshaded.version>3.3.4</fs.hadoopshaded.version>
	</properties>

	<modules>
		<module>flink-hadoop-fs</module>
		<module>flink-fs-hadoop-shaded</module>
		<module>flink-s3-fs-base</module>
		<module>flink-s3-fs-hadoop</module>
		<module>flink-s3-fs-presto</module>
		<module>flink-oss-fs-hadoop</module>
		<module>flink-azure-fs-hadoop</module>
		<module>flink-gs-fs-hadoop</module>
	</modules>

	<!-- Common dependency setup for all filesystems -->
	<dependencies>

		<!-- The filesystems are extensions that can assume logger and JSR to be already provided -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Base testing tools -->
		<dependency>
			<groupId>org.apache.flink</groupId>
			<artifactId>flink-test-utils-junit</artifactId>
		</dependency>
		<dependency>
			<groupId>edu.illinois</groupId>
			<artifactId>ctest4j-junit5</artifactId>
			<version>1.0.0</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>dependency-convergence</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<skip>true</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<!-- enables TCP/IP communication between surefire and forked JVM-->
					<forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory"/>
					<reuseForks>${flink.reuseForks}</reuseForks>
					<trimStackTrace>false</trimStackTrace>
					<systemPropertyVariables combine.children="append">
						<forkNumber>0${surefire.forkNumber}</forkNumber>
						<!-- $$ ensures that surefire resolves this to the current forkNumber,
						 	instead of maven during initialization -->
						<mvn.forkNumber>$${surefire.forkNumber}</mvn.forkNumber>
						<hadoop.version>${flink.hadoop.version}</hadoop.version>
						<checkpointing.randomization>true</checkpointing.randomization>
						<buffer-debloat.randomization>true</buffer-debloat.randomization>
						<user.country>US</user.country>
						<user.language>en</user.language>
						<!-- force the use of the Changelog State Backend in tests on mini-cluster
							on: enable CheckpointingOptions.ENABLE_STATE_CHANGE_LOG on cluster level
							random: enable it randomly, unless explicitly set
							unset: don't alter the configuration
						-->
						<checkpointing.changelog>random</checkpointing.changelog>
						<!-- Expose as property so that test utils that spawn JVMs can pick it up. -->
						<surefire.module.config>${surefire.module.config}</surefire.module.config>
						<project.basedir>${project.basedir}</project.basedir>
						<!--suppress MavenModelInspection -->
						<test.randomization.seed>${test.randomization.seed}</test.randomization.seed>
						<junit.jupiter.extensions.autodetection.enabled>true</junit.jupiter.extensions.autodetection.enabled>
						<!-- Enabled the parallel test execution feature. -->
						<!-- Tests and test classes can be enabled for concurrent execution using @Execution(ExecutionMode.CONCURRENT). -->
						<junit.jupiter.execution.parallel.enabled>true</junit.jupiter.execution.parallel.enabled>
						<!-- Tests are by default executed by a single thread; parallel execution is opt-in. -->
						<junit.jupiter.execution.parallel.mode.default>same_thread</junit.jupiter.execution.parallel.mode.default>
						<!-- Tests suites are by default executed by a single thread; parallel execution is opt-in. -->
						<junit.jupiter.execution.parallel.mode.classes.default>same_thread</junit.jupiter.execution.parallel.mode.classes.default>
						<!-- automatically adjust parallelism based on available cpu/processor cores-->
						<junit.jupiter.execution.parallel.config.strategy>dynamic</junit.jupiter.execution.parallel.config.strategy>
					</systemPropertyVariables>
					<!-- This is picked up by IntelliJ -->
					<argLine>${flink.surefire.baseArgLine}</argLine>
					<argLine>
						-javaagent:/Users/lithe/Downloads/aspectjweaver-1.9.7.M2.jar
					</argLine>
					<reuseForks>false</reuseForks>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
				<executions>
					<!--execute all the unit tests-->
					<execution>
						<id>default-test</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>
								<include>${test.unit.pattern}</include>
							</includes>
							<forkCount>${flink.forkCountUnitTest}</forkCount>
							<argLine>${flink.surefire.baseArgLine} -Xmx${flink.XmxUnitTest}</argLine>
						</configuration>
					</execution>
					<!--execute all the integration tests-->
					<execution>
						<id>integration-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>
								<include>**/*.*</include>
							</includes>
							<excludes>
								<exclude>${test.unit.pattern}</exclude>
								<!-- Exclude classes generated by Scala that surefire rejects
								     e.g., 'org.apache.flink.api.scala.typeutils.Foo$Bar$Foobar'. -->
								<exclude>**/*$*</exclude>
							</excludes>
							<forkCount>${flink.forkCountITCase}</forkCount>
							<argLine>${flink.surefire.baseArgLine} -Xmx${flink.XmxITCase}</argLine>
							<reuseForks>false</reuseForks>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
